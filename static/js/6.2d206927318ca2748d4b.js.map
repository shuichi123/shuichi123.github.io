{"version":3,"sources":["webpack:///./src/views_demo/vue源码学习/响应式原理/data如何变成可观察的.js"],"names":["Object","defineProperty","__webpack_exports__","value"],"mappings":"oDAAAA,OAAAC,eAAAC,EAAA,cAAAC,OAAA,IAAeD,EAAA","file":"static/js/6.2d206927318ca2748d4b.js","sourcesContent":["export default `\n<script>\n{\n    function observe(value, cb) {\n        Object.keys(value).forEach((key) => defineReactive(value, key, value[key] , cb))\n    }\n    \n    function defineReactive (obj, key, val, cb) {\n        Object.defineProperty(obj, key, {\n            enumerable: true,\n            configurable: true,\n            get: ()=>{\n                /*....依赖收集等....*/\n                console.log('getter')\n                return val\n            },\n            set:newVal=> {\n              if (val === newVal) {\n                return\n              }\n              val = newVal\n              console.log('setter')\n              cb();/*订阅者收到消息的回调*/\n            }\n        })\n    }\n    \n    class Vue {\n        constructor(options) {\n            this.$data = options.data;\n            observe(this.$data, options.render)\n        }\n    }\n    \n    let app = new Vue({\n        el: '#app',\n        data: {\n            text: 'text',\n            text2: 'text2'\n        },\n        render(){\n            console.log(\"render\");\n        }\n    })\n    app.$data.text\n    app.$data.text = 'test'\n}\n</script>\n`\n\n\n\n// WEBPACK FOOTER //\n// ./src/views_demo/vue源码学习/响应式原理/data如何变成可观察的.js"],"sourceRoot":""}