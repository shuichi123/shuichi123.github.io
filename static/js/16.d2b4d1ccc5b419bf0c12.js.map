{"version":3,"sources":["webpack:///./src/views_demo/js/数组/reduce,reduceRight.js"],"names":["Object","defineProperty","__webpack_exports__","value"],"mappings":"qDAAAA,OAAAC,eAAAC,EAAA,cAAAC,OAAA,IAAeD,EAAA","file":"static/js/16.d2b4d1ccc5b419bf0c12.js","sourcesContent":["export default `\n<script>\n{\n    //reduce() 方法接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值\n    //第一次执行时，tmp为数组的第一个值，item为第二个值，index为1\n    //第一次执行的返回值，就是第二次执行时的tmp，然后item为第三个值，index为2\n    //以此类推\n    //以数组各元素之和为例\n    let arr = [100, 101, 102, 103, 104]\n    let sum = arr.reduce((tmp, item, index) => {\n        return tmp + item\n    })\n    write(sum)\n}\nwrite('<br>')\n{\n    //reduceRight() 方法的功能和 reduce() 功能是一样的，不同的是 reduceRight() 从数组的末尾向前将数组中的数组项做累加\n    //第一次执行时，tmp为数组的第一个值，item为第二个值，index为1\n    //第一次执行的返回值，就是第二次执行时的tmp，然后item为第三个值，index为2\n    //以此类推\n    //以数组各元素之和为例\n    let arr = [100, 101, 102, 103, 104]\n    let sum = arr.reduceRight((tmp, item, index) => {\n        return tmp + item\n    })\n    write(sum)\n}\nwrite('<br>')\n</script>\n`\n\n\n\n// WEBPACK FOOTER //\n// ./src/views_demo/js/数组/reduce,reduceRight.js"],"sourceRoot":""}